(()=>{"use strict";(()=>{let t={};const a=t=>+new Intl.NumberFormat("en-US",{minimumFractionDigits:2,maximumFractionDigits:2}).format(9*t/5+32);return{getData:async(e="Barcelona")=>{try{const m=await fetch("https://api.openweathermap.org/data/2.5/weather?APPID=3374f07f34f654b5b0cdc1faca7f5db0&units=metric&q="+e,{mode:"cors"}),n=await m.json();200===n.cod&&(t.city=n.name,t.country=n.sys.country,t.tempC=n.main.temp,t.tempMaxC=n.main.temp_max,t.tempMinC=n.main.temp_min,t.tempF=a(n.main.temp),t.tempMaxF=a(n.main.temp_max),t.tempMinF=a(n.main.temp_min),t.description=n.weather[0].main,t.icon=n.weather[0].icon),t.cod=n.cod}catch(t){console.log(t)}return t}}})().getData().then((t=>console.log(t)))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyYXBwLy4vc3JjL3dlYXRoZXJTZXJ2aWNlLmpzIiwid2VicGFjazovL3dlYXRoZXJhcHAvLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsid2VhdGhlciIsImNlbHNpdXNUb0ZhaHJlbmhlaXQiLCJjZWxzaXVzIiwiSW50bCIsIk51bWJlckZvcm1hdCIsIm1pbmltdW1GcmFjdGlvbkRpZ2l0cyIsIm1heGltdW1GcmFjdGlvbkRpZ2l0cyIsImZvcm1hdCIsImdldERhdGEiLCJhc3luYyIsImNpdHkiLCJyZXNwb25zZSIsImZldGNoIiwibW9kZSIsImRhdGEiLCJqc29uIiwiY29kIiwibmFtZSIsImNvdW50cnkiLCJzeXMiLCJ0ZW1wQyIsIm1haW4iLCJ0ZW1wIiwidGVtcE1heEMiLCJ0ZW1wX21heCIsInRlbXBNaW5DIiwidGVtcF9taW4iLCJ0ZW1wRiIsInRlbXBNYXhGIiwidGVtcE1pbkYiLCJkZXNjcmlwdGlvbiIsImljb24iLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJ0aGVuIl0sIm1hcHBpbmdzIjoibUJBQXVCLE1BRW5CLElBQUlBLEVBQVUsR0FFZCxNQXlCTUMsRUFBdUJDLElBQ1AsSUFBSUMsS0FBS0MsYUFBYSxRQUFTLENBQzdDQyxzQkFBdUIsRUFDdkJDLHNCQUF1QixJQUdUQyxPQUFtQixFQUFWTCxFQUFjLEVBQUssSUFHbEQsTUFBTyxDQUFFTSxRQWxDT0MsTUFBT0MsRUFBTyxlQUMxQixJQUNJLE1BQU1DLFFBQWlCQyxNQUxuQix5R0FLK0JGLEVBQU0sQ0FBRUcsS0FBTSxTQUMzQ0MsUUFBYUgsRUFBU0ksT0FFWCxNQUFiRCxFQUFLRSxNQUNMaEIsRUFBUVUsS0FBT0ksRUFBS0csS0FDcEJqQixFQUFRa0IsUUFBVUosRUFBS0ssSUFBSUQsUUFDM0JsQixFQUFRb0IsTUFBUU4sRUFBS08sS0FBS0MsS0FDMUJ0QixFQUFRdUIsU0FBV1QsRUFBS08sS0FBS0csU0FDN0J4QixFQUFReUIsU0FBV1gsRUFBS08sS0FBS0ssU0FDN0IxQixFQUFRMkIsTUFBUTFCLEVBQW9CYSxFQUFLTyxLQUFLQyxNQUM5Q3RCLEVBQVE0QixTQUFXM0IsRUFBb0JhLEVBQUtPLEtBQUtHLFVBQ2pEeEIsRUFBUTZCLFNBQVc1QixFQUFvQmEsRUFBS08sS0FBS0ssVUFDakQxQixFQUFROEIsWUFBY2hCLEVBQUtkLFFBQVEsR0FBR3FCLEtBQ3RDckIsRUFBUStCLEtBQU9qQixFQUFLZCxRQUFRLEdBQUcrQixNQUduQy9CLEVBQVFnQixJQUFNRixFQUFLRSxJQUNyQixNQUFPZ0IsR0FDTEMsUUFBUUMsSUFBSUYsR0FFaEIsT0FBT2hDLEtBMUJRLEdDS2YsVUFBeUJtQyxNQUFLckIsR0FBUW1CLFFBQVFDLElBQUlwQixNIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBXZWF0aGVyU2VydmljZSA9ICgoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gJ2h0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP0FQUElEPTMzNzRmMDdmMzRmNjU0YjViMGNkYzFmYWNhN2Y1ZGIwJnVuaXRzPW1ldHJpYyZxPSc7XG4gICAgbGV0IHdlYXRoZXIgPSB7fTtcblxuICAgIGNvbnN0IGdldERhdGEgPSBhc3luYyAoY2l0eSA9ICdCYXJjZWxvbmEnKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCArIGNpdHksIHsgbW9kZTogJ2NvcnMnIH0pO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgICAgICAgaWYgKGRhdGEuY29kID09PSAyMDApIHtcbiAgICAgICAgICAgICAgICB3ZWF0aGVyLmNpdHkgPSBkYXRhLm5hbWU7XG4gICAgICAgICAgICAgICAgd2VhdGhlci5jb3VudHJ5ID0gZGF0YS5zeXMuY291bnRyeTtcbiAgICAgICAgICAgICAgICB3ZWF0aGVyLnRlbXBDID0gZGF0YS5tYWluLnRlbXA7XG4gICAgICAgICAgICAgICAgd2VhdGhlci50ZW1wTWF4QyA9IGRhdGEubWFpbi50ZW1wX21heDtcbiAgICAgICAgICAgICAgICB3ZWF0aGVyLnRlbXBNaW5DID0gZGF0YS5tYWluLnRlbXBfbWluO1xuICAgICAgICAgICAgICAgIHdlYXRoZXIudGVtcEYgPSBjZWxzaXVzVG9GYWhyZW5oZWl0KGRhdGEubWFpbi50ZW1wKTtcbiAgICAgICAgICAgICAgICB3ZWF0aGVyLnRlbXBNYXhGID0gY2Vsc2l1c1RvRmFocmVuaGVpdChkYXRhLm1haW4udGVtcF9tYXgpO1xuICAgICAgICAgICAgICAgIHdlYXRoZXIudGVtcE1pbkYgPSBjZWxzaXVzVG9GYWhyZW5oZWl0KGRhdGEubWFpbi50ZW1wX21pbik7XG4gICAgICAgICAgICAgICAgd2VhdGhlci5kZXNjcmlwdGlvbiA9IGRhdGEud2VhdGhlclswXS5tYWluO1xuICAgICAgICAgICAgICAgIHdlYXRoZXIuaWNvbiA9IGRhdGEud2VhdGhlclswXS5pY29uO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB3ZWF0aGVyLmNvZCA9IGRhdGEuY29kO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB3ZWF0aGVyO1xuICAgIH07XG5cbiAgICBjb25zdCBjZWxzaXVzVG9GYWhyZW5oZWl0ID0gKGNlbHNpdXMpID0+IHtcbiAgICAgICAgY29uc3QgZm9ybWF0dGVyID0gbmV3IEludGwuTnVtYmVyRm9ybWF0KCdlbi1VUycsIHtcbiAgICAgICAgICAgIG1pbmltdW1GcmFjdGlvbkRpZ2l0czogMixcbiAgICAgICAgICAgIG1heGltdW1GcmFjdGlvbkRpZ2l0czogMixcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuICtmb3JtYXR0ZXIuZm9ybWF0KCgoY2Vsc2l1cyAqIDkgLyA1KSArIDMyKSlcbiAgICB9O1xuXG4gICAgcmV0dXJuIHsgZ2V0RGF0YSB9XG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCBXZWF0aGVyU2VydmljZTsiLCJpbXBvcnQgV2VhdGhlclNlcnZpY2UgZnJvbSAnLi93ZWF0aGVyU2VydmljZSc7XG5cbmNvbnN0IEFwcCA9ICgoKSA9PiB7XG5cbiAgICBjb25zdCBpbml0ID0gKCkgPT4ge1xuICAgICAgICBXZWF0aGVyU2VydmljZS5nZXREYXRhKCkudGhlbihkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHsgaW5pdCB9XG59KSgpO1xuXG5BcHAuaW5pdCgpOyJdLCJzb3VyY2VSb290IjoiIn0=